}
pollutantmean("specdata", "nitrate", 23)
>complete.cases
?complete.cases
id <- seq(2,12, by = 2)
id
for( x in id)
print(x)
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
}
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
}
directory <- "specdata"
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
}
filepath
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
print(filepath)
}
data <- read.csv(filepath)
data
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete <- complete.cases(rough_data)
}
complete
for(x in id){
formatId <- sprintf("%03.f", as.numeric(x))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete <- rough_data[complete.cases(rough_data)]
}
complete.cases(rough_data)
sum(complete.cases(rough_data))
for(x in length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete <- sum(complete.cases(rough_data))
}
complete
length(id)
id[6]
x
nobs <- vector(mode=numeric, length(id))
nobs <- vector(mode="numeric", length(id))
nobs
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
formatId <- sprintf("%03.f", as.numeric(id[x]))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
filepath
complete("specdata", 30:25)
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
print(formatId)
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete("specdata", 30:25)
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
print(formatId)
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
print(formatId)
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in 1:length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
print(formatId)
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in 1:length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
complete("specdata", 30:25)
directory <- "xxxxxxxx"
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
dir
corr <- function(directory, threshold = 0) {
source("complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=dir)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
source("complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=dir)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
source("./complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=dir)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
}
cr <- corr("specdata", 150)
getwd()
setwd("/Users/dongdong/Workspaces/rlanguage/r-study/r-programming")
getwd()
source("complete.R")
setwd("..")
getwd()
setwd("/Users/dongdong/Workspaces/rlanguage/r-study/r-programming")
setwd("~")
getwd()
setwd("/Users/dongdong/Workspaces/rlanguage/r-study/r-programming")
setwd("-")
corr <- function(directory, threshold = 0) {
old.dir <- getwd() ;
new.dir <- "/Users/dongdong/Workspaces/rlanguage/r-study/r-programming"
setwd(new.dir)
source("./complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=dir)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
setwd(old.dir)
}
cr <- corr("specdata", 150)
getwd()
old.dir <- getwd() ;
new.dir <- "/Users/dongdong/Workspaces/rlanguage/r-study/r-programming"
setwd(new.dir)
source("complete.R")
directory <- "specdata"
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
dir
completes <- complete(directory=dir)
completes <- complete(directory=directory)
completes
corr <- function(directory, threshold = 0) {
old.dir <- getwd() ;
new.dir <- "/Users/dongdong/Workspaces/rlanguage/r-study/r-programming"
setwd(new.dir)
source("complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=directory)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
setwd(old.dir)
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
# sulfate | nitrate
pollutantmean <- function(directory, pollutant, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
formatId <- sprintf("%03.f", as.numeric(id))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
data <- read.csv(filepath[1])
for(i in filepath[-1]){
tmp <- read.csv(i)
data <- rbind(data, tmp)
}
poll_data <- data[,pollutant]
poll_data <- poll_data[!is.na(poll_data)]
m <- mean(poll_data)
round(m, 3)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
complete <- function(directory, id=1:332){
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
nobs <- vector(mode="numeric", length(id))
for(x in 1:length(id)){
formatId <- sprintf("%03.f", as.numeric(id[x]))
filename <- paste(formatId, ".csv", sep = "")
filepath <- paste(dir, filename, sep = "")
rough_data <- read.csv(filepath)
complete_num <- sum(complete.cases(rough_data))
nobs[x] <- complete_num
}
data.frame(id, nobs)
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold = 0) {
old.dir <- getwd() ;
new.dir <- "/Users/dongdong/Workspaces/rlanguage/r-study/r-programming"
setwd(new.dir)
source("complete.R")
dir <- paste("/Users/dongdong/Downloads/", directory, sep = "")
dir <- paste(dir, "/", sep = "")
completes <- complete(directory=directory)
# of all files there.
#cat(sprintf("c.nrow: %i\n", nrow(completes)))
selects <- subset(completes, completes$nobs>threshold)
# select just the ones with enough complete cases.
#cat(sprintf("dc.nrow: %i\n", nrow(desired.completes)))
correlates <- vector(mode="numeric", length=nrow(selects))
for(i in 1:nrow(selects)){
#cat(sprintf("id: %i\n",selects[i,"id"]))
file <- paste(dir,sprintf("%03.f", as.numeric(selects$id[i])),".csv", sep="")
#cat(sprintf("%s\n",file) )
this<-(read.csv(file))
that<-subset(this,complete.cases(this)==T) # filter the NAs
correlates[i]<-round( cor(that$sulfate,that$nitrate), 5)
}
return(correlates)
setwd(old.dir)
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cr <- corr("specdata", 1000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
# install.packages("swirl")
# packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5!=7
5!=7
5 != 7
5 == 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
c(1.4, 3.6, 7.9, 8.8)
evaluate(sd(), c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},  c(8, 4, 0))
evaluate(function(x){x[3]},  c(8, 4, 0))
evaluate(function(x){x[length(x)]},  c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("a")
submit()
mad_libs(place="1", adjective="2", noun="3")
submit()
'I' %p% "love" %p% "R!"
d1 < Sys.Date()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
string(unclass(t2))
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
t3
t3
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
